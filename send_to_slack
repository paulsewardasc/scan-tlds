#!/usr/bin/python3
import sys
import os
import json
import requests


def split_text_blocks(lines):
    blocks = []
    current_block = ""
    for line in lines:
        if len(current_block) + len(line) <= 3000:
            current_block += line + "\n"
        else:
            blocks.append(current_block)
            current_block = line + "\n"
    if current_block:
        blocks.append(current_block)
    return blocks

def send(block,priority,title):
    title = title + f' ({priority})'
    blocks = split_text_blocks(block)
    for block in blocks:
      data = f'{title}\n```{block}```'
      print(f'[-] data: {data}, {len(data)}')
      send_code_to_slack(data)
      None

def send_code_to_slack(code):
  code = {"text": code}
  code = json.dumps(code)
  token=os.environ['SLACK_API_TOKEN']
  url = f'https://hooks.slack.com/services/{token}'
  resp = requests.post(url, code)
  print(resp)

if __name__ == '__main__':
  # Get the filename from the first argument passed to the script.
  filename = sys.argv[1]
  try:
    title = sys.argv[2]
  except:
    title = 'SCAN Summary'

  # Read the contents of the text file.
  with open(filename, "r") as f:
    code = f.read()

  priorities = {
    "[low]": [],
    "[medium]": [],
    "[high]": [],
    "[critical]": [],
    "[info]": [],
    "other": []
  }

  lines = code.split("\n")
  for line in lines:
      fields = line.split(" ")
      if len(fields) > 1:
          priority = fields[4]
          if priority in priorities:
              priorities[priority].append(line)
          else:
              priorities["other"].append(line) 

  send(priorities["[info]"],"info",title)
  send(priorities["[low]"],"low",title)
  send(priorities["[medium]"],"medium",title)
  send(priorities["[high]"],"high",title)
  send(priorities["[critical]"],"critical",title)
 


